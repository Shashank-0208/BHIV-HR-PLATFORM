# BHIV HR Platform - Local Development Docker Compose
# Optimized for local development with environment-aware configuration

version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: bhiv_db_local
    environment:
      POSTGRES_DB: ${DATABASE_NAME:-bhiv_hr}
      POSTGRES_USER: ${DATABASE_USER:-bhiv_user}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD:-bhiv_pass}
    ports:
      - "${DATABASE_PORT:-5432}:5432"
    volumes:
      - postgres_data_local:/var/lib/postgresql/data
      - ../../services/db/init_complete.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER:-bhiv_user} -d ${DATABASE_NAME:-bhiv_hr}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - bhiv_network

  gateway:
    build: 
      context: ../../services/gateway
      dockerfile: Dockerfile
    container_name: bhiv_gateway_local
    ports:
      - "${GATEWAY_PORT:-8000}:8000"
    environment:
      - ENVIRONMENT=${ENVIRONMENT:-local}
      - DATABASE_URL=postgresql://${DATABASE_USER:-bhiv_user}:${DATABASE_PASSWORD:-bhiv_pass}@db:5432/${DATABASE_NAME:-bhiv_hr}
      - API_KEY_SECRET=${API_KEY_SECRET}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - LOG_LEVEL=${LOG_LEVEL:-DEBUG}
      - DEBUG=${DEBUG:-true}
    volumes:
      - ../../services/gateway/logs:/app/logs
      - ../../services/gateway/app:/app/app:ro  # Read-only mount for development
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - bhiv_network

  agent:
    build: 
      context: ../../services/agent
      dockerfile: Dockerfile
    container_name: bhiv_agent_local
    ports:
      - "${AGENT_PORT:-9000}:9000"
    environment:
      - ENVIRONMENT=${ENVIRONMENT:-local}
      - DATABASE_URL=postgresql://${DATABASE_USER:-bhiv_user}:${DATABASE_PASSWORD:-bhiv_pass}@db:5432/${DATABASE_NAME:-bhiv_hr}
      - GATEWAY_SERVICE_URL=http://gateway:8000
      - LOG_LEVEL=${LOG_LEVEL:-DEBUG}
    volumes:
      - ../../services/agent:/app:ro  # Read-only mount for development
    depends_on:
      db:
        condition: service_healthy
      gateway:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:9000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - bhiv_network

  portal:
    build: 
      context: ../../services/portal
      dockerfile: Dockerfile
    container_name: bhiv_portal_local
    ports:
      - "${PORTAL_PORT:-8501}:8501"
    environment:
      - ENVIRONMENT=${ENVIRONMENT:-local}
      - GATEWAY_URL=http://gateway:8000
      - API_KEY_SECRET=${API_KEY_SECRET}
      - LOG_LEVEL=${LOG_LEVEL:-DEBUG}
    volumes:
      - ../../services/portal:/app:ro  # Read-only mount for development
    depends_on:
      gateway:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 60s
      timeout: 30s
      retries: 3
      start_period: 120s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
    networks:
      - bhiv_network

  client_portal:
    build: 
      context: ../../services/client_portal
      dockerfile: Dockerfile
    container_name: bhiv_client_portal_local
    ports:
      - "${CLIENT_PORTAL_PORT:-8502}:8502"
    environment:
      - ENVIRONMENT=${ENVIRONMENT:-local}
      - GATEWAY_URL=http://gateway:8000
      - API_KEY_SECRET=${API_KEY_SECRET}
      - DATABASE_URL=postgresql://${DATABASE_USER:-bhiv_user}:${DATABASE_PASSWORD:-bhiv_pass}@db:5432/${DATABASE_NAME:-bhiv_hr}
      - LOG_LEVEL=${LOG_LEVEL:-DEBUG}
    volumes:
      - ../../services/client_portal:/app:ro  # Read-only mount for development
    depends_on:
      gateway:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8502/_stcore/health"]
      interval: 60s
      timeout: 30s
      retries: 3
      start_period: 120s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
    networks:
      - bhiv_network

  # Optional: Redis for caching (can be enabled for development)
  redis:
    image: redis:7-alpine
    container_name: bhiv_redis_local
    ports:
      - "6379:6379"
    volumes:
      - redis_data_local:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - bhiv_network
    profiles:
      - caching  # Only start with --profile caching

  # Optional: Prometheus for monitoring (can be enabled for development)
  prometheus:
    image: prom/prometheus:latest
    container_name: bhiv_prometheus_local
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data_local:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    restart: unless-stopped
    networks:
      - bhiv_network
    profiles:
      - monitoring  # Only start with --profile monitoring

volumes:
  postgres_data_local:
    driver: local
  redis_data_local:
    driver: local
  prometheus_data_local:
    driver: local

networks:
  bhiv_network:
    driver: bridge
    name: bhiv_hr_network